Skip to content
 
Search…
All gists
Back to GitHub
@sohaibhassan12 
@vmandic
vmandic/dotnet core .gitignore
Last active last week • Report abuse
Code
Revisions
4
Stars
89
Forks
18
<script src="https://gist.github.com/vmandic/ac2ecc9c24f6899ee0ec46e4ce444a0e.js"></script>
A default .NET Core project .gitignore file - or just type `dotnet new gitignore`
dotnet core .gitignore
# From .NET Core 3.0 you can use the command: `dotnet new gitignore` to generate a customizable .gitignore file

*.swp
*.*~
project.lock.json
.DS_Store
*.pyc

# Visual Studio Code
.vscode

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/
msbuild.log
msbuild.err
msbuild.wrn

# Visual Studio 2015
.vs/
Load earlier comments...
@alexisEstudiante
alexisEstudiante commented on May 19, 2019
what about the obj/ and bin/?

@MrGrabazu
MrGrabazu commented on May 20, 2019
what about the obj/ and bin/?

[Bb]in/ cover both bin/ and Bin/
[Oo]bj/ cover both obj/ and Obj/

Or I misunderstood your interrogation ?

@davidACash
davidACash commented on May 30, 2019
Does this work for VS 2019 projects?

@MrGrabazu
MrGrabazu commented on May 30, 2019
I do not try it but I guess it does. You may need to check before commit if there are some undesired files but it may cover it pretty nicely.

@mauriciogracia
mauriciogracia commented on Jun 3, 2019
Thanks for sharing, is important to include this file in the root folder of the local repository before doing your first "git add" if you already have some file in the repository you can check this question in stackoverflow - https://stackoverflow.com/questions/31543997/make-git-ignore-dll-pdb-and-similar-generate-files

@wcpmahmudul
wcpmahmudul commented on Aug 23, 2020
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

@twmbx
twmbx commented on Sep 1, 2020
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

Epic comment. Thanks a bunch @wcpmahmudul.

@HyperCC
HyperCC commented on Sep 2, 2020
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

That command allows uploading some files from the .vscode folder, is that normal? I understood that the entire folder was not uploaded.

@jeffjohnson
jeffjohnson commented on Sep 8, 2020
@wcpmahmudul Awesome

@danosilva81
danosilva81 commented on Sep 23, 2020
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

This works great! Thanks

@wladneto
wladneto commented on Sep 25, 2020
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

Perfect!
@leslie-alldridge
leslie-alldridge commented on Oct 14, 2020
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

Fantastic, cheers

@CodeLyoko2610
CodeLyoko2610 commented on Dec 21, 2020
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

Nice! Thanks!

@kathyrollo
kathyrollo commented on Dec 22, 2020
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

Not all heroes wear capes.

@Karklik
Karklik commented on Jan 24, 2021
Thanks!

@chinedudara
chinedudara commented on Mar 2, 2021
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

You're the man!

@SammyGCh
SammyGCh commented on Mar 2, 2021
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

That command allows uploading some files from the .vscode folder, is that normal? I understood that the entire folder was not uploaded.

I'm new in NET Core and I have NET 5. Does this command work for this version as well?

@mauriciogracia
mauriciogracia commented on Mar 2, 2021
As far as I know, yes. Give it at try and let us know if you find any issues

@SammyGCh
SammyGCh commented on Mar 5, 2021
As far as I know, yes. Give it at try and let us know if you find any issues

It works! Thank you!

@wineloy
wineloy commented on Apr 29, 2021
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

Wow!

@64J0
64J0 commented on Sep 23, 2021
Hey man, I was reading the paket docs and there they recommend do set those lines for the .gitignore related to the paket files/folders:

Make sure to add the following entries to your .gitignore:

#Paket dependency manager
.paket/
paket-files/
Can you please change this file according to this information?

Btw, I got this information in this page. It is written immediately before the section called "Install the Paket bootstrapper (legacy)".

@josuecaleb6482
josuecaleb6482 commented on Mar 28, 2022
Thanks

@abd-el-rahman-abd-el-zaher
abd-el-rahman-abd-el-zaher commented on May 29, 2022
thanks

@vmandic
Author
vmandic commented on Jun 11, 2022
Damn folks, just type dotnet new gitignore :D

@nNabakhteveli
nNabakhteveli commented on Jul 23, 2022
Damn folks, just type dotnet new gitignore :D

True :D

@angusfungayi
angusfungayi commented on Nov 30, 2022
dotnet new gitignore command does the job

@wfuertes
wfuertes commented on Sep 8
Damn folks, just type dotnet new gitignore :D

👍

@pauloroncarati
pauloroncarati commented on Sep 20
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

nice one @wcpmahmudul !

@hpafonso
hpafonso commented last month
From Dot.Net core 3.0, .gitignore can be easily added by simple command. Run "dotnet new gitignore" on project root folder.

Epic comment. Thanks a bunch @wcpmahmudul.

super epic, big W

@jalallinux
jalallinux commented last week
It's better:

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET
project.lock.json
project.fragment.lock.json
artifacts/

# Tye
.tye/

# ASP.NET Scaffolding
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Coverlet is a free, cross platform Code Coverage Tool
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio 6 auto-generated project file (contains which files were open etc.)
*.vbp

# Visual Studio 6 workspace and project file (working project files containing files to include in project)
*.dsw
*.dsp

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# Visual Studio History (VSHistory) files
.vshistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

# Fody - auto-generated XML schema
FodyWeavers.xsd

# VS Code files for those working on multiple tools
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Local History for Visual Studio Code
.history/

# Windows Installer files from build outputs
*.cab
*.msi
*.msix
*.msm
*.msp

# JetBrains Rider
*.sln.iml

##
## Visual studio for Mac
##


# globs
Makefile.in
*.userprefs
*.usertasks
config.make
config.status
aclocal.m4
install-sh
autom4te.cache/
*.tar.gz
tarballs/
test-results/

# Mac bundle stuff
*.dmg
*.app

# content below from: https://github.com/github/gitignore/blob/master/Global/macOS.gitignore
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# content below from: https://github.com/github/gitignore/blob/master/Global/Windows.gitignore
# Windows thumbnail cache files
Thumbs.db
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows shortcuts
*.lnk

# Rider Idea
.idea/
bin/
obj/
/packages/
riderModule.iml
/_ReSharper.Caches/```
@sohaibhassan12
 
Leave a comment
No file chosen
Attach files by dragging & dropping, selecting or pasting them.
Footer
© 2023 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
/.gitignore
/.gitignore
